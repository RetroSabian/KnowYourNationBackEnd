// <auto-generated />
using System;
using Know_Your_Nation_Speedy.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Know_Your_Nation_Speedy.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20190207131510_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.Animations", b =>
                {
                    b.Property<int>("AnimationsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoverImageLocation");

                    b.Property<string>("Description");

                    b.Property<string>("FileLocation");

                    b.Property<string>("Name");

                    b.HasKey("AnimationsId");

                    b.ToTable("AnimationsEntries");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.AnimationsWatched", b =>
                {
                    b.Property<int>("AnimationsWatchedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnimationsId");

                    b.Property<bool>("Bookmark");

                    b.Property<int?>("Rating");

                    b.Property<int>("UsersId");

                    b.Property<bool>("WatchedStatus");

                    b.HasKey("AnimationsWatchedId");

                    b.HasIndex("AnimationsId");

                    b.HasIndex("UsersId");

                    b.ToTable("AnimationsWatchedEntries");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.Articles", b =>
                {
                    b.Property<int>("ArticlesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoverImageLocation");

                    b.Property<string>("Description");

                    b.Property<string>("FileLocation");

                    b.Property<bool>("InRotation");

                    b.Property<string>("Name");

                    b.Property<int?>("NationsId");

                    b.HasKey("ArticlesId");

                    b.HasIndex("NationsId");

                    b.ToTable("ArticlesEntries");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.ArticlesRead", b =>
                {
                    b.Property<int>("ArticlesReadId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticlesId");

                    b.Property<bool>("Bookmark");

                    b.Property<bool>("GivenStatus");

                    b.Property<int?>("Rating");

                    b.Property<bool>("ReadStatus");

                    b.Property<int>("UsersId");

                    b.HasKey("ArticlesReadId");

                    b.HasIndex("ArticlesId");

                    b.HasIndex("UsersId");

                    b.ToTable("ArticlesReadEntries");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.Books", b =>
                {
                    b.Property<int>("BooksId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoverImageLocation");

                    b.Property<string>("Description");

                    b.Property<string>("FileLocation");

                    b.Property<string>("Name");

                    b.HasKey("BooksId");

                    b.ToTable("BooksEntries");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.BooksRead", b =>
                {
                    b.Property<int>("BooksReadId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Bookmark");

                    b.Property<int>("BooksId");

                    b.Property<int?>("Rating");

                    b.Property<bool>("ReadStatus");

                    b.Property<int>("UsersId");

                    b.HasKey("BooksReadId");

                    b.HasIndex("BooksId");

                    b.HasIndex("UsersId");

                    b.ToTable("BooksReadEntries");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.Comics", b =>
                {
                    b.Property<int>("ComicsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoverImageLocation");

                    b.Property<string>("Description");

                    b.Property<string>("FileLocation");

                    b.Property<string>("Name");

                    b.HasKey("ComicsId");

                    b.ToTable("ComicsEntries");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.ComicsRead", b =>
                {
                    b.Property<int>("ComicsReadId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Bookmark");

                    b.Property<int>("ComicsId");

                    b.Property<int?>("Rating");

                    b.Property<bool>("ReadStatus");

                    b.Property<int>("UsersId");

                    b.HasKey("ComicsReadId");

                    b.HasIndex("ComicsId");

                    b.HasIndex("UsersId");

                    b.ToTable("ComicsReadEntries");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.Donations", b =>
                {
                    b.Property<int>("DonationsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AmountDonated");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Organization");

                    b.Property<string>("Url");

                    b.Property<int?>("UsersId");

                    b.HasKey("DonationsId");

                    b.HasIndex("UsersId");

                    b.ToTable("DonationsEntries");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.Events", b =>
                {
                    b.Property<int>("EventsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<string>("ProjectName");

                    b.HasKey("EventsId");

                    b.ToTable("EventsEntries");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.Memberships", b =>
                {
                    b.Property<int>("MembershipsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Duration");

                    b.Property<double>("Price");

                    b.Property<string>("Type");

                    b.HasKey("MembershipsId");

                    b.ToTable("MembershipsEntries");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.Nations", b =>
                {
                    b.Property<int>("NationsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("ShortDescription");

                    b.HasKey("NationsId");

                    b.ToTable("NationsEntries");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.Orders", b =>
                {
                    b.Property<int>("OrdersId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressToDeliever");

                    b.Property<DateTime>("DateOrdered");

                    b.Property<string>("TrackingNumber");

                    b.Property<int?>("UsersId");

                    b.HasKey("OrdersId");

                    b.HasIndex("UsersId");

                    b.ToTable("OrdersEntries");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.ProductOrders", b =>
                {
                    b.Property<int>("ProductOrdersId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrdersId");

                    b.Property<int>("ProductsId");

                    b.Property<int>("Quantity");

                    b.HasKey("ProductOrdersId");

                    b.HasIndex("OrdersId");

                    b.HasIndex("ProductsId");

                    b.ToTable("ProductOrdersEntries");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.Products", b =>
                {
                    b.Property<int>("ProductsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoverImageLocation");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.Property<int>("QuantityOnHand");

                    b.Property<int>("Rating");

                    b.Property<string>("Type");

                    b.HasKey("ProductsId");

                    b.ToTable("ProductsEntries");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.UserEvents", b =>
                {
                    b.Property<int>("UserEventsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventsId");

                    b.Property<int>("UsersId");

                    b.HasKey("UserEventsId");

                    b.HasIndex("EventsId");

                    b.HasIndex("UsersId");

                    b.ToTable("VolunteerEntries");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.Users", b =>
                {
                    b.Property<int>("UsersId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<int?>("MembershipsId");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Surname");

                    b.HasKey("UsersId");

                    b.HasIndex("MembershipsId");

                    b.ToTable("UsersEntries");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.AnimationsWatched", b =>
                {
                    b.HasOne("Know_Your_Nation_Speedy.Models.Animations", "Animation")
                        .WithMany("AnimationWatched")
                        .HasForeignKey("AnimationsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Know_Your_Nation_Speedy.Models.Users", "User")
                        .WithMany("AnimationWatched")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.Articles", b =>
                {
                    b.HasOne("Know_Your_Nation_Speedy.Models.Nations", "Nation")
                        .WithMany("Article")
                        .HasForeignKey("NationsId");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.ArticlesRead", b =>
                {
                    b.HasOne("Know_Your_Nation_Speedy.Models.Articles", "Article")
                        .WithMany("ArticleRead")
                        .HasForeignKey("ArticlesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Know_Your_Nation_Speedy.Models.Users", "User")
                        .WithMany("ArticleRead")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.BooksRead", b =>
                {
                    b.HasOne("Know_Your_Nation_Speedy.Models.Books", "Book")
                        .WithMany("BookRead")
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Know_Your_Nation_Speedy.Models.Users", "User")
                        .WithMany("BookRead")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.ComicsRead", b =>
                {
                    b.HasOne("Know_Your_Nation_Speedy.Models.Comics", "Comic")
                        .WithMany("ComicRead")
                        .HasForeignKey("ComicsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Know_Your_Nation_Speedy.Models.Users", "User")
                        .WithMany("ComicRead")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.Donations", b =>
                {
                    b.HasOne("Know_Your_Nation_Speedy.Models.Users", "User")
                        .WithMany("Donation")
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.Orders", b =>
                {
                    b.HasOne("Know_Your_Nation_Speedy.Models.Users", "User")
                        .WithMany("Order")
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.ProductOrders", b =>
                {
                    b.HasOne("Know_Your_Nation_Speedy.Models.Orders", "Order")
                        .WithMany("ProductOrder")
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Know_Your_Nation_Speedy.Models.Products", "Product")
                        .WithMany("ProductOrder")
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.UserEvents", b =>
                {
                    b.HasOne("Know_Your_Nation_Speedy.Models.Events", "Event")
                        .WithMany("UserEvent")
                        .HasForeignKey("EventsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Know_Your_Nation_Speedy.Models.Users", "User")
                        .WithMany("UserEvent")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Know_Your_Nation_Speedy.Models.Users", b =>
                {
                    b.HasOne("Know_Your_Nation_Speedy.Models.Memberships", "Membership")
                        .WithMany("User")
                        .HasForeignKey("MembershipsId");
                });
#pragma warning restore 612, 618
        }
    }
}
